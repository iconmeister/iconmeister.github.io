((t,e={path:(t,e="")=>`<path d='${t}' ${e}/>`},i={v1:"",v2:"",v3:"",is:"",border:"",filter:"",img:1,box:9,rect:"<rect width='100%' height='100%' fill='{tile}' {border}/>",tile:"none",fill:"none",width:1,scale:1,opacity:1,rotate:0,stroke:"#000",xy:0,w:0,h:0,top:"",api:[t,e]})=>{customElements.define("svg-icon",class extends HTMLElement{static get observedAttributes(){return Object.keys(i)}attributeChangedCallback(){this.svg()}svg(s=this,r=s.A||Object.keys(s.A={...i}).map(t=>Object.defineProperty(s,t,{set:e=>s.setAttribute(t,e),get:()=>s.getAttribute(t)||getComputedStyle(s).getPropertyValue("--svg-icon-"+t).replace(/"/g,"").trim()||s.A[t]},e[t]=(e=>s.A[t]=e))),l,a=(t[s.is]||"").split`;`.map(t=>([r,l]=t.trim().split`:`,e[r]?e[r].apply(s,l.split`,`):t)).join``,o=s.box/2,g=`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 ${s.w||s.box} ${s.h||s.box}'>${s.rect}<g stroke-width='{width}' stroke='{stroke}' fill='{fill}' opacity='{opacity}' filter='{filter}' transform='translate({xy}) matrix({scale} 0 0 {scale} ${o-o*s.scale} ${o-o*s.scale}) rotate({rotate} ${o} ${o})'>${a}</g>${s.top}</svg>`.replace(/{\s?([^{}\s]*)\s?}/g,(t,e)=>s[e])){return s.innerHTML=s.img?`<img src="data:image/svg+xml,${g.replace(/#/g,"%23")}">`:g}})})({});