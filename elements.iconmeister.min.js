((t,e={path:(t,e="")=>`<path d='${t}' ${e}/>`},s={is:"",svg:0,box:9,rect:"<rect width='100%' height='100%' fill='{tile}' {border}/>",border:"",tile:"none",fill:"none",width:1,scale:1,opacity:1,rotate:0,stroke:"#000",xy:0,w:0,h:0,top:"",$:e,icons:t})=>{customElements.define("svg-icon",class extends HTMLElement{static get observedAttributes(){return Object.keys(s)}attributeChangedCallback(){this.icon()}icon(i=this,r=i.A||Object.keys(i.A={...s}).map(t=>Object.defineProperty(i,t,{set:e=>i.setAttribute(t,e),get:()=>i.getAttribute(t)||getComputedStyle(i).getPropertyValue("--svg-icon-"+t).replace(/"/g,"").trim()||i.A[t]},e[t]=(e=>i.A[t]=e))),a=i.box/2,o=`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 ${i.w||i.box} ${i.h||i.box}'>${`${i.rect}<g stroke='{stroke}' stroke-width='{width}' fill='{fill}' opacity='{opacity}' transform='translate({xy}) matrix({scale} 0 0 {scale} ${a-a*i.scale} ${a-a*i.scale}) rotate({rotate} ${a} ${a})'>${(t[i.is]||"path:m3 3h3v3h-3z").split`;`.map(t=>([r,a]=t.trim().split`:`,e[r]?e[r].apply(i,a.split`,`):t)).join``}</g>{top}`.replace(/{\s?([^{}\s]*)\s?}/g,(t,e)=>i[e])}</svg>`){i.innerHTML=i.svg?o:`<img src="data:image/svg+xml,${o.replace(/#/g,"%23")}">`}})})({});